# coding: utf-8

"""
    The First Descendant Metadata API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from meta_client.models.descendant_response_inner_descendant_stat_inner import DescendantResponseInnerDescendantStatInner

class TestDescendantResponseInnerDescendantStatInner(unittest.TestCase):
    """DescendantResponseInnerDescendantStatInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DescendantResponseInnerDescendantStatInner:
        """Test DescendantResponseInnerDescendantStatInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DescendantResponseInnerDescendantStatInner`
        """
        model = DescendantResponseInnerDescendantStatInner()
        if include_optional:
            return DescendantResponseInnerDescendantStatInner(
                level = 1.337,
                stat_detail = [
                    meta_client.models.descendant_response_inner_descendant_stat_inner_stat_detail_inner.DescendantResponse_inner_descendant_stat_inner_stat_detail_inner(
                        stat_type = '', 
                        stat_value = 1.337, )
                    ]
            )
        else:
            return DescendantResponseInnerDescendantStatInner(
        )
        """

    def testDescendantResponseInnerDescendantStatInner(self):
        """Test DescendantResponseInnerDescendantStatInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
