# coding: utf-8

"""
    The First Descendant Metadata API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from meta_client.models.reactor_response_inner_reactor_skill_power_inner import ReactorResponseInnerReactorSkillPowerInner

class TestReactorResponseInnerReactorSkillPowerInner(unittest.TestCase):
    """ReactorResponseInnerReactorSkillPowerInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReactorResponseInnerReactorSkillPowerInner:
        """Test ReactorResponseInnerReactorSkillPowerInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReactorResponseInnerReactorSkillPowerInner`
        """
        model = ReactorResponseInnerReactorSkillPowerInner()
        if include_optional:
            return ReactorResponseInnerReactorSkillPowerInner(
                level = 1.337,
                skill_atk_power = 1.337,
                sub_skill_atk_power = 1.337,
                skill_power_coefficient = [
                    meta_client.models.reactor_response_inner_reactor_skill_power_inner_skill_power_coefficient_inner.ReactorResponse_inner_reactor_skill_power_inner_skill_power_coefficient_inner(
                        coefficient_stat_id = '', 
                        coefficient_stat_value = 1.337, )
                    ],
                enchant_effect = [
                    meta_client.models.reactor_response_inner_reactor_skill_power_inner_enchant_effect_inner.ReactorResponse_inner_reactor_skill_power_inner_enchant_effect_inner(
                        enchant_level = 1.337, 
                        stat_type = '', 
                        value = 1.337, )
                    ]
            )
        else:
            return ReactorResponseInnerReactorSkillPowerInner(
        )
        """

    def testReactorResponseInnerReactorSkillPowerInner(self):
        """Test ReactorResponseInnerReactorSkillPowerInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
